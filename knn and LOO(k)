iri<-iris
len<-nrow(iri)
euclideanDistance <- function(u, v)
{
  sqrt(sum((u - v)^2))
}
sortObjectsByDist <- function(xl, z, metricFunction =
                                euclideanDistance)
{
  l <- nrow(xl)
  n <- ncol(xl) - 1
  distances <- matrix(NA, l, 2)
  for (i in 1:l)
  {
    distances[i, ] <- c(i, metricFunction(xl[i, 1:2], z))
  }
  orderedXl <- xl[order(distances[, 2]), ]
  return (orderedXl);
}
kNN <- function(xl, z, k)
{
  orderedXl <- sortObjectsByDist(xl, z)
  n <- dim(orderedXl)[2] - 1
  classes <- orderedXl[1:k, n + 1]
  counts <- table(classes)
  class <- names(which.max(counts))
  return (class)
}
LO<-c()
for(k in 1:9){
  LOO<-0
  for(i in 1:len){
    obj<-iri[i,1:2]
    resp<-iri[i,5]
    clss<-(kNN(iri[-i,],obj,k))
    if(clss!=resp){
      LOO<-LOO+1
    }
  }
  LO<-c(LO,LOO)
}
which.min(LO)

plot(seq(9),LO,type = "o",main = "LOO from k", xlab = "k-values",ylab = "LOO-values",col = "red")
